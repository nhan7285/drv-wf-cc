<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Commission64.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>